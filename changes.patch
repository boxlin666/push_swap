diff --git a/Makefile b/Makefile
index 58dc1c0..d9fa7e3 100644
--- a/Makefile
+++ b/Makefile
@@ -6,7 +6,7 @@
 #    By: helin <helin@student.42.fr>                +#+  +:+       +#+         #
 #                                                 +#+#+#+#+#+   +#+            #
 #    Created: 2025/06/25 12:10:40 by helin             #+#    #+#              #
-#    Updated: 2025/06/25 12:10:44 by helin            ###   ########.fr        #
+#    Updated: 2025/06/25 15:11:43 by helin            ###   ########.fr        #
 #                                                                              #
 # **************************************************************************** #
 
@@ -28,8 +28,9 @@ SRCS = $(SRCS_DIR)/main.c \
        $(SRCS_DIR)/utils/operations.c \
        $(SRCS_DIR)/utils/parse.c \
        $(SRCS_DIR)/utils/error.c \
+       $(SRCS_DIR)/utils/utils.c \
        $(SRCS_DIR)/utils/memory.c \
-       $(SRCS_DIR)/utils/input.c
+       $(SRCS_DIR)/utils/normalize.c
 OBJS = $(SRCS:.c=.o)
 
 LIBFT_DIR = libft
diff --git a/includes/push_swap.h b/includes/push_swap.h
index 108ba8d..645fd9d 100644
--- a/includes/push_swap.h
+++ b/includes/push_swap.h
@@ -6,7 +6,7 @@
 /*   By: helin <helin@student.42.fr>                +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/05/26 12:37:44 by helin             #+#    #+#             */
-/*   Updated: 2025/06/25 13:36:03 by helin            ###   ########.fr       */
+/*   Updated: 2025/06/25 15:15:10 by helin            ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -14,7 +14,6 @@
 # define PUSH_SWAP_H
 # include <stddef.h>
 
-
 typedef struct s_node
 {
 	int					value;
@@ -59,7 +58,7 @@ void					push_swap(t_stack *stack_a, t_stack *stack_b,
 							t_operation **operations);
 int						parse_input(t_context *ctx, int argc, char **argv);
 void					quick_sort(int *arr, int low, int high);
-void					normalize_stack(t_stack *a);
+void					normalize_stack(t_context *ctx);
 
 void					print_stacks(t_stack *stack_a, t_stack *stack_b);
 void					print_rotation_plan(t_rotation_plan plan);
@@ -86,11 +85,13 @@ void					sort_medium(t_stack *stack_a, t_stack *stack_b,
 							t_operation **operations);
 void					sort_large(t_stack *stack_a, t_stack *stack_b,
 							t_operation **operations);
-t_operation				*add_operation(t_operation *head, const char *op);
+
+t_operation 			*add_operation(t_context *ctx, t_operation *head, const char *op);
 t_operation				*optimize_operations(t_operation *head);
 t_operation				*compress_operations(t_operation *head);
 void					free_operations(t_operation *operations);
 void					print_operations(t_operation *operations);
+
 void					error_exit(t_context *ctx);
 void					free_stack(t_stack *stack);
 
diff --git a/main.c b/main.c
index dc47f96..ad55e46 100644
--- a/main.c
+++ b/main.c
@@ -6,7 +6,7 @@
 /*   By: helin <helin@student.42.fr>                +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/05/26 12:53:51 by helin             #+#    #+#             */
-/*   Updated: 2025/06/25 13:35:46 by helin            ###   ########.fr       */
+/*   Updated: 2025/06/25 14:56:40 by helin            ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -24,7 +24,7 @@ int	main(int argc, char **argv)
 		error_exit(&ctx);
 	if (parse_input(&ctx, argc, argv))
 	{
-		normalize_stack(ctx.stack_a);
+		normalize_stack(&ctx);
 		push_swap(ctx.stack_a, ctx.stack_b, &ctx.operations);
 		optimize_operations(ctx.operations);
 		ctx.operations = compress_operations(ctx.operations);
diff --git a/operations/push.c b/operations/push.c
index bd90678..03da648 100644
--- a/operations/push.c
+++ b/operations/push.c
@@ -6,7 +6,7 @@
 /*   By: helin <helin@student.42.fr>                +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/05/26 13:31:08 by helin             #+#    #+#             */
-/*   Updated: 2025/06/25 12:11:17 by helin            ###   ########.fr       */
+/*   Updated: 2025/06/25 14:45:27 by helin            ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -58,4 +58,4 @@ void	do_pb(t_stack *stack_a, t_stack *stack_b, t_operation **operations)
 	stack_b->head = temp;
 	stack_b->size++;
 	*operations = add_operation(*operations, "pb");
-}
\ No newline at end of file
+}
diff --git a/operations/rotate.c b/operations/rotate.c
index 0526613..43b9659 100644
--- a/operations/rotate.c
+++ b/operations/rotate.c
@@ -6,7 +6,7 @@
 /*   By: helin <helin@student.42.fr>                +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/05/26 13:38:12 by helin             #+#    #+#             */
-/*   Updated: 2025/06/25 12:11:28 by helin            ###   ########.fr       */
+/*   Updated: 2025/06/25 14:45:41 by helin            ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -48,4 +48,4 @@ void do_rr(t_stack *stack_a, t_stack *stack_b, t_operation **operations)
 {
     do_ra(stack_a, operations);
     do_rb(stack_b, operations);
-}
\ No newline at end of file
+}
diff --git a/operations/swap.c b/operations/swap.c
index bd9b05f..4d59478 100644
--- a/operations/swap.c
+++ b/operations/swap.c
@@ -6,7 +6,7 @@
 /*   By: helin <helin@student.42.fr>                +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/05/26 13:34:17 by helin             #+#    #+#             */
-/*   Updated: 2025/06/25 12:11:46 by helin            ###   ########.fr       */
+/*   Updated: 2025/06/25 14:47:25 by helin            ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -21,7 +21,6 @@ void	do_sa(t_stack *stack_a, t_operation **operations)
 		return ;
 	first = stack_a->head;
 	second = stack_a->head->next;
-	// 交换指针
 	first->next = second->next;
 	if (second->next)
 		second->next->prev = first;
@@ -43,7 +42,6 @@ void	do_sb(t_stack *stack_b, t_operation **operations)
 		return ;
 	first = stack_b->head;
 	second = stack_b->head->next;
-	// 交换指针
 	first->next = second->next;
 	if (second->next)
 		second->next->prev = first;
@@ -60,4 +58,4 @@ void	do_ss(t_stack *stack_a, t_stack *stack_b, t_operation **operations)
 {
 	do_sa(stack_a, operations);
 	do_sb(stack_b, operations);
-}
\ No newline at end of file
+}
diff --git a/sorting/push_swap.c b/sorting/push_swap.c
index 4ac9bd7..1d0736e 100644
--- a/sorting/push_swap.c
+++ b/sorting/push_swap.c
@@ -6,7 +6,7 @@
 /*   By: helin <helin@student.42.fr>                +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/05/26 12:58:41 by helin             #+#    #+#             */
-/*   Updated: 2025/06/25 12:11:52 by helin            ###   ########.fr       */
+/*   Updated: 2025/06/25 14:47:37 by helin            ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
diff --git a/sorting/sort_medium.c b/sorting/sort_medium.c
index 49d32be..53308fe 100644
--- a/sorting/sort_medium.c
+++ b/sorting/sort_medium.c
@@ -6,7 +6,7 @@
 /*   By: helin <helin@student.42.fr>                +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/05/26 12:54:53 by helin             #+#    #+#             */
-/*   Updated: 2025/06/25 12:12:06 by helin            ###   ########.fr       */
+/*   Updated: 2025/06/25 14:48:04 by helin            ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -74,4 +74,4 @@ void	sort_medium(t_stack *stack_a, t_stack *stack_b,
 	{
 		do_pa(stack_a, stack_b, operations);
 	}
-}
\ No newline at end of file
+}
diff --git a/sorting/sort_small.c b/sorting/sort_small.c
index 0dcb214..930b157 100644
--- a/sorting/sort_small.c
+++ b/sorting/sort_small.c
@@ -6,7 +6,7 @@
 /*   By: helin <helin@student.42.fr>                +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/05/26 12:54:08 by helin             #+#    #+#             */
-/*   Updated: 2025/06/25 12:12:11 by helin            ###   ########.fr       */
+/*   Updated: 2025/06/25 14:48:22 by helin            ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -28,21 +28,21 @@ void	sort_three(t_stack *stack_a, t_operation **operations)
 	a = stack_a->head->value;
 	b = stack_a->head->next->value;
 	c = stack_a->head->next->next->value;
-	if (a > b && b < c && a < c) // 2,1,3
+	if (a > b && b < c && a < c)
 		do_sa(stack_a, operations);
-	else if (a > b && b > c && a > c) // 3,2,1
+	else if (a > b && b > c && a > c)
 	{
 		do_sa(stack_a, operations);
 		do_rra(stack_a, operations);
 	}
-	else if (a < b && b > c && a > c) // 2,3,1
+	else if (a < b && b > c && a > c)
 		do_rra(stack_a, operations);
-	else if (a < b && b > c && a < c) // 1,3,2
+	else if (a < b && b > c && a < c)
 	{
 		do_sa(stack_a, operations);
 		do_ra(stack_a, operations);
 	}
-	else if (a > b && b < c && a > c) // 3,1,2
+	else if (a > b && b < c && a > c)
 		do_ra(stack_a, operations);
 }
 
diff --git a/utils/error.c b/utils/error.c
index fc2afed..40bad2c 100644
--- a/utils/error.c
+++ b/utils/error.c
@@ -6,7 +6,7 @@
 /*   By: helin <helin@student.42.fr>                +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/05/26 14:55:58 by helin             #+#    #+#             */
-/*   Updated: 2025/06/25 13:30:52 by helin            ###   ########.fr       */
+/*   Updated: 2025/06/25 14:48:32 by helin            ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -23,4 +23,4 @@ void error_exit(t_context *ctx)
 		free_operations(ctx->operations);
         write(2, "Error\n", 6);
 	}
-}
\ No newline at end of file
+}
diff --git a/utils/input.c b/utils/input.c
deleted file mode 100644
index ea2288d..0000000
--- a/utils/input.c
+++ /dev/null
@@ -1,99 +0,0 @@
-/* ************************************************************************** */
-/*                                                                            */
-/*                                                        :::      ::::::::   */
-/*   input.c                                            :+:      :+:    :+:   */
-/*                                                    +:+ +:+         +:+     */
-/*   By: helin <helin@student.42.fr>                +#+  +:+       +#+        */
-/*                                                +#+#+#+#+#+   +#+           */
-/*   Created: 2025/05/26 14:57:32 by helin             #+#    #+#             */
-/*   Updated: 2025/06/25 12:12:22 by helin            ###   ########.fr       */
-/*                                                                            */
-/* ************************************************************************** */
-
-#include"push_swap.h"
-#include<stdlib.h>
-
-t_stack *init_stack(void)
-{
-    t_stack *stack;
-    stack = malloc(sizeof(t_stack));
-    if (!stack)
-        return (NULL);
-    stack->head = NULL;
-    stack->tail = NULL;
-    stack->size = 0;
-    return (stack);
-}
-
-void swap(int *a, int *b)
-{
-    int tmp = *a;
-    *a = *b;
-    *b = tmp;
-}
-
-int partition(int *arr, int low, int high)
-{
-    int pivot = arr[high];
-    int i = low - 1;
-    int j = low;
-    while (j < high)
-    {
-        if (arr[j] <= pivot)
-        {
-            i++;
-            swap(&arr[i], &arr[j]);
-        }
-        j++;
-    }
-    swap(&arr[i + 1], &arr[high]);
-    return i + 1;
-}
-
-
-void quick_sort(int *arr, int low, int high)
-{
-    if (low < high)
-    {
-        int pi = partition(arr, low, high);
-        quick_sort(arr, low, pi - 1);
-        quick_sort(arr, pi + 1, high);
-    }
-}
-
-int get_index(int *sorted, int size, int value)
-{
-    int i = 0;
-    while (i < size)
-    {
-        if (sorted[i] == value)
-            return i;
-        i++;
-    }
-    return -1;
-}
-
-void normalize_stack(t_stack *a)
-{
-    int     *arr;
-    int     i = 0;
-    t_node  *cur = a->head;
-
-    arr = malloc(sizeof(int) * a->size);
-    if (!arr)
-        error_exit();
-    while (cur)
-    {
-        arr[i++] = cur->value;
-        cur = cur->next;
-    }
-    quick_sort(arr, 0, a->size - 1);
-    cur = a->head;
-    while (cur)
-    {
-        cur->value = get_index(arr, a->size, cur->value);
-        cur = cur->next;
-    }
-
-    free(arr);
-}
diff --git a/utils/memory.c b/utils/memory.c
index 9b97fde..7d81dc1 100644
--- a/utils/memory.c
+++ b/utils/memory.c
@@ -6,13 +6,25 @@
 /*   By: helin <helin@student.42.fr>                +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/05/26 14:55:30 by helin             #+#    #+#             */
-/*   Updated: 2025/06/25 12:12:27 by helin            ###   ########.fr       */
+/*   Updated: 2025/06/25 14:51:55 by helin            ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
 #include"push_swap.h"
 #include<stdlib.h>
 
+t_stack *init_stack(void)
+{
+    t_stack *stack;
+    stack = malloc(sizeof(t_stack));
+    if (!stack)
+        return (NULL);
+    stack->head = NULL;
+    stack->tail = NULL;
+    stack->size = 0;
+    return (stack);
+}
+
 void free_stack(t_stack *stack)
 {
     t_node *current;
diff --git a/utils/operations.c b/utils/operations.c
index db1511d..ff35a96 100644
--- a/utils/operations.c
+++ b/utils/operations.c
@@ -6,7 +6,7 @@
 /*   By: helin <helin@student.42.fr>                +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/05/26 13:54:53 by helin             #+#    #+#             */
-/*   Updated: 2025/06/25 12:13:28 by helin            ###   ########.fr       */
+/*   Updated: 2025/06/25 14:56:19 by helin            ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -15,17 +15,17 @@
 #include <stdlib.h>
 #include <unistd.h>
 
-t_operation *add_operation(t_operation *head, const char *op)
+t_operation *add_operation(t_context *ctx, t_operation *head, const char *op)
 {
     t_operation *new_op = malloc(sizeof(t_operation));
     if (!new_op)
-        error_exit();
+        error_exit(ctx);
 
     new_op->op = strdup(op);
     if (!new_op->op)
     {
         free(new_op);
-        error_exit();
+        error_exit(ctx);
     }
 
     new_op->next = NULL;
@@ -75,7 +75,6 @@ t_operation *new_op(const char *op_str) {
     return op;
 }
 
-// 添加操作到链表末尾
 void append_op(t_operation **head, t_operation **tail, const char *op_str) {
     t_operation *new = new_op(op_str);
     if (!new) return;
@@ -87,7 +86,6 @@ void append_op(t_operation **head, t_operation **tail, const char *op_str) {
     }
 }
 
-// 主优化函数
 t_operation *compress_operations(t_operation *head)
 {
     t_operation *new_head = NULL;
@@ -96,13 +94,11 @@ t_operation *compress_operations(t_operation *head)
 
     while (current)
     {
-        // 检查是否是旋转操作
         if (strcmp(current->op, "ra") == 0 || strcmp(current->op, "rb") == 0 ||
             strcmp(current->op, "rra") == 0 || strcmp(current->op, "rrb") == 0)
         {
             int ra = 0, rb = 0, rra = 0, rrb = 0;
 
-            // 处理连续的旋转操作，直到遇到非旋转操作
             while (current && (strcmp(current->op, "ra") == 0 || strcmp(current->op, "rb") == 0 ||
                                strcmp(current->op, "rra") == 0 || strcmp(current->op, "rrb") == 0))
             {
